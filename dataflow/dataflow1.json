{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "incautaciones_armas",
						"type": "DatasetReference"
					},
					"name": "datos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "hechosIncautacionArma",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "dim_ubicacion",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "dim_delito",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "dim_zona",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "dim_arma",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "dim_lugar",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "dim_fecha",
						"type": "DatasetReference"
					},
					"name": "sink7"
				}
			],
			"transformations": [
				{
					"name": "id"
				},
				{
					"name": "fecha"
				},
				{
					"name": "ubicacion"
				},
				{
					"name": "lugar"
				},
				{
					"name": "arma"
				},
				{
					"name": "zona"
				},
				{
					"name": "delito"
				},
				{
					"name": "hechos"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "setLatitudLongitud"
				},
				{
					"name": "setHora"
				}
			],
			"scriptLines": [
				"source(output(",
				"          codigo_iccs as string,",
				"          subtipo_objeto_robado as string,",
				"          nombre_objeto as string,",
				"          clase_arma as string,",
				"          calidad_de as string,",
				"          fabricacion as string,",
				"          fecha_evento as string,",
				"          hora_evento as string,",
				"          tipo_lugar as string,",
				"          lugar as string,",
				"          latitud as string,",
				"          longitud as string,",
				"          codigo_zona as string,",
				"          codigo_distrito as string,",
				"          codigo_circuito as string,",
				"          codigo_subcircuito as string,",
				"          nombre_zona as string,",
				"          nombre_distrito as string,",
				"          nombre_circuito as string,",
				"          nombre_subcircuito as string,",
				"          codigo_provincia as string,",
				"          codigo_canton as string,",
				"          codigo_parroquia as string,",
				"          nombre_provincia as string,",
				"          nombre_canton as string,",
				"          nombre_parroquia as string,",
				"          tipo_delito as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datos",
				"datos keyGenerate(output(row_id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> id",
				"setHora select(mapColumn(",
				"          fecha_id = row_id,",
				"          fecha_evento,",
				"          hora_evento",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> fecha",
				"setLatitudLongitud select(mapColumn(",
				"          ubicacion_id = row_id,",
				"          codigo_provincia,",
				"          codigo_canton,",
				"          codigo_parroquia,",
				"          nombre_provincia,",
				"          nombre_canton,",
				"          nombre_parroquia,",
				"          latitud,",
				"          longitud",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ubicacion",
				"id select(mapColumn(",
				"          lugar_id = row_id,",
				"          tipo_lugar,",
				"          lugar",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> lugar",
				"id select(mapColumn(",
				"          arma_id = row_id,",
				"          nombre_arma = nombre_objeto,",
				"          clase_arma,",
				"          calidad_detencion = calidad_de,",
				"          fabricacion,",
				"          subtipo_arma = subtipo_objeto_robado",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> arma",
				"id select(mapColumn(",
				"          zona_id = row_id,",
				"          nombre_zona,",
				"          nombre_distrito,",
				"          nombre_circuito,",
				"          nombre_subcircuito",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> zona",
				"id select(mapColumn(",
				"          delito_id = row_id,",
				"          tipo_delito",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> delito",
				"derivedColumn1 select(mapColumn(",
				"          id_hecho,",
				"          fecha_id,",
				"          arma_id,",
				"          zona_id,",
				"          ubicacion_id,",
				"          lugar_id,",
				"          delito_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> hechos",
				"id derive(id_hecho = row_id,",
				"          fecha_id = row_id,",
				"          arma_id = row_id,",
				"          zona_id = row_id,",
				"          ubicacion_id = row_id,",
				"          lugar_id = row_id,",
				"          delito_id = row_id) ~> derivedColumn1",
				"id derive(longitud = toFloat(replace(trim(replace(longitud, \"'\", \"\")), \",\", \".\")),",
				"          latitud = toFloat(replace(trim(replace(latitud, \"'\", \"\")), \",\", \".\"))) ~> setLatitudLongitud",
				"id derive(hora_evento = iif(length(trim(replace(hora_evento, \"'\", \"\"))) == 7,\r",
				"    concat(\"0\", trim(replace(hora_evento, \"'\", \"\"))),\r",
				"    trim(replace(hora_evento, \"'\", \"\"))\r",
				")) ~> setHora",
				"hechos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_hecho as integer,",
				"          fecha_id as integer,",
				"          ubicacion_id as integer,",
				"          lugar_id as integer,",
				"          arma_id as integer,",
				"          zona_id as integer,",
				"          delito_id as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"ubicacion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ubicacion_id as integer,",
				"          codigo_provincia as string,",
				"          nombre_provincia as string,",
				"          codigo_canton as string,",
				"          nombre_canton as string,",
				"          codigo_parroquia as string,",
				"          nombre_parroquia as string,",
				"          latitud as double,",
				"          longitud as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ubicacion_id,",
				"          codigo_provincia,",
				"          nombre_provincia,",
				"          codigo_canton,",
				"          nombre_canton,",
				"          codigo_parroquia,",
				"          nombre_parroquia,",
				"          latitud,",
				"          longitud",
				"     )) ~> sink2",
				"delito sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          delito_id as integer,",
				"          tipo_delito as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"zona sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          zona_id as integer,",
				"          nombre_zona as string,",
				"          nombre_distrito as string,",
				"          nombre_circuito as string,",
				"          nombre_subcircuito as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"arma sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          arma_id as integer,",
				"          nombre_arma as string,",
				"          clase_arma as string,",
				"          calidad_detencion as string,",
				"          fabricacion as string,",
				"          subtipo_arma as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5",
				"lugar sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          lugar_id as integer,",
				"          tipo_lugar as string,",
				"          lugar as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink6",
				"fecha sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fecha_id as integer,",
				"          fecha_evento as date,",
				"          hora_evento as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          fecha_id,",
				"          fecha_evento,",
				"          hora_evento",
				"     )) ~> sink7"
			]
		}
	}
}