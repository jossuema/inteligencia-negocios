{
	"name": "detencionesFlow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "detenciones_2025",
						"type": "DatasetReference"
					},
					"name": "datos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "hechos_detenciones",
						"type": "DatasetReference"
					},
					"name": "hechosTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_ubicacion",
						"type": "DatasetReference"
					},
					"name": "ubicacionTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_zona_policial",
						"type": "DatasetReference"
					},
					"name": "zonaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_infraccion",
						"type": "DatasetReference"
					},
					"name": "infraccionTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_lugar",
						"type": "DatasetReference"
					},
					"name": "lugarTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_fecha",
						"type": "DatasetReference"
					},
					"name": "fechaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_demografia",
						"type": "DatasetReference"
					},
					"name": "demografiaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_detenciones_condicion",
						"type": "DatasetReference"
					},
					"name": "condicionTable"
				}
			],
			"transformations": [
				{
					"name": "fecha"
				},
				{
					"name": "ubicacion"
				},
				{
					"name": "lugar"
				},
				{
					"name": "infraccion"
				},
				{
					"name": "zona"
				},
				{
					"name": "demografia"
				},
				{
					"name": "hechos"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "setHora"
				},
				{
					"name": "ID"
				},
				{
					"name": "setID"
				},
				{
					"name": "setEdad"
				},
				{
					"name": "condicion"
				}
			],
			"scriptLines": [
				"parameters{",
				"     max_id as integer (489847)",
				"}",
				"source(output(",
				"          codigo_iccs as string,",
				"          tipo as string,",
				"          estado_civil as string,",
				"          estatus_migratorio as string,",
				"          edad as string,",
				"          sexo as string,",
				"          genero as string,",
				"          nacionalidad as string,",
				"          autoidentificacion_etnica as string,",
				"          nivel_de_instruccion as string,",
				"          condicion as string,",
				"          movilizacion as string,",
				"          tipo_arma as string,",
				"          arma as string,",
				"          fecha_detencion_aprehension as string,",
				"          hora_detencion_aprehension as string,",
				"          lugar as string,",
				"          tipo_lugar as string,",
				"          latitud as string,",
				"          longitud as string,",
				"          codigo_distrito as string,",
				"          codigo_circuito as string,",
				"          codigo_subcircuito as string,",
				"          nombre_zona as string,",
				"          nombre_subzona as string,",
				"          nombre_distrito as string,",
				"          nombre_circuito as string,",
				"          nombre_subcircuito as string,",
				"          codigo_provincia as string,",
				"          codigo_canton as string,",
				"          codigo_parroquia as string,",
				"          nombre_provincia as string,",
				"          nombre_canton as string,",
				"          nombre_parroquia as string,",
				"          presunta_infraccion as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datos",
				"setHora select(mapColumn(",
				"          fecha_id = row_id,",
				"          fecha_evento = fecha_detencion_aprehension,",
				"          hora_evento",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> fecha",
				"setID select(mapColumn(",
				"          ubicacion_id = row_id,",
				"          provincia = codigo_provincia,",
				"          canton = codigo_canton,",
				"          parroquia = nombre_parroquia",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ubicacion",
				"setID select(mapColumn(",
				"          lugar_id = row_id,",
				"          tipo_lugar,",
				"          lugar",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> lugar",
				"setID select(mapColumn(",
				"          infraccion_id = row_id,",
				"          presunta_infraccion",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> infraccion",
				"setID select(mapColumn(",
				"          zona_policial_id = row_id,",
				"          zona = nombre_zona,",
				"          distrito = codigo_distrito,",
				"          circuito = codigo_circuito,",
				"          subcircuito = codigo_subcircuito",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> zona",
				"setID select(mapColumn(",
				"          demografia_id = row_id,",
				"          sexo,",
				"          genero,",
				"          edad,",
				"          nacionalidad,",
				"          etnia = autoidentificacion_etnica,",
				"          estado_civil,",
				"          nivel_instruccion = nivel_de_instruccion",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> demografia",
				"derivedColumn1 select(mapColumn(",
				"          id_hecho,",
				"          fecha_id,",
				"          ubicacion_id,",
				"          lugar_id,",
				"          zona_id,",
				"          demografia_id,",
				"          infraccion_id,",
				"          condicion_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> hechos",
				"setID derive(id_hecho = row_id,",
				"          fecha_id = row_id,",
				"          ubicacion_id = row_id,",
				"          lugar_id = row_id,",
				"          zona_id = row_id,",
				"          demografia_id = row_id,",
				"          infraccion_id = row_id,",
				"          condicion_id = row_id) ~> derivedColumn1",
				"setID derive(hora_evento = toTimestamp(fecha_detencion_aprehension + ' ' + left(right(hora_detencion_aprehension, 13), 8), 'yyyy-MM-dd HH:mm:ss')) ~> setHora",
				"datos keyGenerate(output(row_id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ID",
				"ID derive(row_id = row_id + toInteger($max_id)) ~> setID",
				"demografia derive(edad = iif(isNull(edad) || edad == 'SIN DATO', toInteger(null()), toInteger(edad))) ~> setEdad",
				"setID select(mapColumn(",
				"          condicion_id = row_id,",
				"          tipo_detencion = tipo,",
				"          condicion,",
				"          tipo_movilizacion = movilizacion,",
				"          arma,",
				"          tipo_arma,",
				"          estatus_migratorio",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> condicion",
				"hechos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_hecho as integer,",
				"          fecha_id as integer,",
				"          ubicacion_id as integer,",
				"          lugar_id as integer,",
				"          zona_policial_id as integer,",
				"          demografia_id as integer,",
				"          infraccion_id as integer,",
				"          condicion_id as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id_hecho,",
				"          fecha_id,",
				"          ubicacion_id,",
				"          lugar_id,",
				"          zona_policial_id = zona_id,",
				"          demografia_id,",
				"          infraccion_id,",
				"          condicion_id",
				"     )) ~> hechosTable",
				"ubicacion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ubicacion_id as integer,",
				"          provincia as string,",
				"          canton as string,",
				"          parroquia as string,",
				"          latitud as double,",
				"          longitud as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ubicacion_id,",
				"          provincia,",
				"          canton,",
				"          parroquia",
				"     )) ~> ubicacionTable",
				"zona sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          zona_policial_id as integer,",
				"          zona as string,",
				"          distrito as string,",
				"          circuito as string,",
				"          subcircuito as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          zona_policial_id,",
				"          zona,",
				"          distrito,",
				"          circuito,",
				"          subcircuito",
				"     )) ~> zonaTable",
				"infraccion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          infraccion_id as integer,",
				"          presunta_infraccion as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          infraccion_id,",
				"          presunta_infraccion",
				"     )) ~> infraccionTable",
				"lugar sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          lugar_id as integer,",
				"          tipo_lugar as string,",
				"          lugar as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          lugar_id,",
				"          tipo_lugar,",
				"          lugar",
				"     )) ~> lugarTable",
				"fecha sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fecha_id as integer,",
				"          fecha_evento as date,",
				"          hora_evento as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          fecha_id,",
				"          fecha_evento,",
				"          hora_evento",
				"     )) ~> fechaTable",
				"setEdad sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          demografia_id as integer,",
				"          sexo as string,",
				"          genero as string,",
				"          edad as integer,",
				"          nacionalidad as string,",
				"          etnia as string,",
				"          estado_civil as string,",
				"          nivel_instruccion as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          demografia_id,",
				"          sexo,",
				"          genero,",
				"          edad,",
				"          nacionalidad,",
				"          etnia,",
				"          estado_civil,",
				"          nivel_instruccion",
				"     )) ~> demografiaTable",
				"condicion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          condicion_id as integer,",
				"          tipo_detencion as string,",
				"          condicion as string,",
				"          tipo_movilizacion as string,",
				"          arma as string,",
				"          tipo_arma as string,",
				"          estatus_migratorio as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          condicion_id,",
				"          tipo_detencion,",
				"          condicion,",
				"          tipo_movilizacion,",
				"          arma,",
				"          tipo_arma,",
				"          estatus_migratorio",
				"     )) ~> condicionTable"
			]
		}
	}
}