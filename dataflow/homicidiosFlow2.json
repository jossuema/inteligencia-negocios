{
	"name": "homicidiosFlow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "homicidios_2025",
						"type": "DatasetReference"
					},
					"name": "datos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "hechos_homicidios",
						"type": "DatasetReference"
					},
					"name": "hechosTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_ubicacion",
						"type": "DatasetReference"
					},
					"name": "ubicacionTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_zona_policial",
						"type": "DatasetReference"
					},
					"name": "zonaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_caracteristicas",
						"type": "DatasetReference"
					},
					"name": "caracteristicasTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_lugar",
						"type": "DatasetReference"
					},
					"name": "lugarTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_fecha",
						"type": "DatasetReference"
					},
					"name": "fechaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_demografia",
						"type": "DatasetReference"
					},
					"name": "demografiaTable"
				},
				{
					"dataset": {
						"referenceName": "dim_homicidios_motivacion",
						"type": "DatasetReference"
					},
					"name": "motivacionTable"
				}
			],
			"transformations": [
				{
					"name": "fecha"
				},
				{
					"name": "ubicacion"
				},
				{
					"name": "lugar"
				},
				{
					"name": "caracteristicas"
				},
				{
					"name": "zona"
				},
				{
					"name": "demografia"
				},
				{
					"name": "hechos"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "setHora"
				},
				{
					"name": "ID"
				},
				{
					"name": "setID"
				},
				{
					"name": "setEdad"
				},
				{
					"name": "motivacion"
				},
				{
					"name": "setUbicacion"
				}
			],
			"scriptLines": [
				"parameters{",
				"     max_id as integer (30508)",
				"}",
				"source(output(",
				"          tipo_muerte as string,",
				"          zona as string,",
				"          subzona as string,",
				"          distrito as string,",
				"          circuito as string,",
				"          codigo_subcircuito as string,",
				"          subcircuito as string,",
				"          provincia as string,",
				"          codigo_provincia as string,",
				"          canton as string,",
				"          codigo_canton as string,",
				"          coordenada_y as string,",
				"          coordenada_x as string,",
				"          area_hecho as string,",
				"          lugar as string,",
				"          tipo_lugar as string,",
				"          fecha_infraccion as string,",
				"          hora_infraccion as string,",
				"          arma as string,",
				"          tipo_arma as string,",
				"          presunta_motivacion as string,",
				"          presun_motiva_observada as string,",
				"          probable_causa_motivada as string,",
				"          edad as string,",
				"          medida_edad as string,",
				"          sexo as string,",
				"          genero as string,",
				"          etnia as string,",
				"          estado_civil as string,",
				"          nacionalidad as string,",
				"          discapacidad as string,",
				"          profesion_registro_civil as string,",
				"          instruccion as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datos",
				"setHora select(mapColumn(",
				"          fecha_id = row_id,",
				"          fecha_evento = fecha_infraccion,",
				"          hora_evento",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> fecha",
				"setUbicacion select(mapColumn(",
				"          ubicacion_id = row_id,",
				"          provincia,",
				"          canton,",
				"          longitud,",
				"          latitud",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ubicacion",
				"setID select(mapColumn(",
				"          lugar_id = row_id,",
				"          tipo_lugar,",
				"          lugar",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> lugar",
				"setID select(mapColumn(",
				"          caracteristicas_id = row_id,",
				"          tipo_muerte,",
				"          arma,",
				"          tipo_arma",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> caracteristicas",
				"setID select(mapColumn(",
				"          zona_policial_id = row_id,",
				"          zona,",
				"          distrito,",
				"          circuito,",
				"          subcircuito",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> zona",
				"setID select(mapColumn(",
				"          demografia_id = row_id,",
				"          sexo,",
				"          genero,",
				"          edad,",
				"          nacionalidad,",
				"          etnia,",
				"          estado_civil,",
				"          nivel_instruccion = instruccion,",
				"          discapacidad,",
				"          profesion = profesion_registro_civil",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> demografia",
				"derivedColumn1 select(mapColumn(",
				"          id_hecho,",
				"          fecha_id,",
				"          ubicacion_id,",
				"          lugar_id,",
				"          zona_id,",
				"          demografia_id,",
				"          motivacion_id,",
				"          caracteristicas_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> hechos",
				"setID derive(id_hecho = row_id,",
				"          fecha_id = row_id,",
				"          ubicacion_id = row_id,",
				"          lugar_id = row_id,",
				"          zona_id = row_id,",
				"          demografia_id = row_id,",
				"          motivacion_id = row_id,",
				"          caracteristicas_id = row_id) ~> derivedColumn1",
				"setID derive(hora_evento = toTimestamp(fecha_infraccion + ' ' + substring(hora_infraccion, 12, 8), 'yyyy-MM-dd HH:mm:ss')) ~> setHora",
				"datos keyGenerate(output(row_id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ID",
				"ID derive(row_id = row_id + toInteger($max_id)) ~> setID",
				"demografia derive(edad = iif(isNull(edad) || edad == 'SIN DATO', toInteger(null()), toInteger(edad))) ~> setEdad",
				"setID select(mapColumn(",
				"          motivacion_id = row_id,",
				"          presunta_motivacion,",
				"          causa_motivada = probable_causa_motivada",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> motivacion",
				"setID derive(longitud = toFloat(replace(trim(replace(coordenada_x, \"'\", \"\")), \",\", \".\")),",
				"          latitud = toFloat(replace(trim(replace(coordenada_y, \"'\", \"\")), \",\", \".\"))) ~> setUbicacion",
				"hechos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_hecho as integer,",
				"          fecha_id as integer,",
				"          ubicacion_id as integer,",
				"          lugar_id as integer,",
				"          zona_policial_id as integer,",
				"          demografia_id as integer,",
				"          motivacion_id as integer,",
				"          caracteristicas_id as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id_hecho,",
				"          fecha_id,",
				"          ubicacion_id,",
				"          lugar_id,",
				"          zona_policial_id = zona_id,",
				"          demografia_id,",
				"          motivacion_id,",
				"          caracteristicas_id",
				"     )) ~> hechosTable",
				"ubicacion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ubicacion_id as integer,",
				"          provincia as string,",
				"          canton as string,",
				"          parroquia as string,",
				"          latitud as double,",
				"          longitud as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ubicacion_id,",
				"          provincia,",
				"          canton,",
				"          latitud,",
				"          longitud",
				"     )) ~> ubicacionTable",
				"zona sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          zona_policial_id as integer,",
				"          zona as string,",
				"          distrito as string,",
				"          circuito as string,",
				"          subcircuito as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          zona_policial_id,",
				"          zona,",
				"          distrito,",
				"          circuito,",
				"          subcircuito",
				"     )) ~> zonaTable",
				"caracteristicas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          caracteristicas_id as integer,",
				"          tipo_muerte as string,",
				"          arma as string,",
				"          tipo_arma as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          caracteristicas_id,",
				"          tipo_muerte,",
				"          arma,",
				"          tipo_arma",
				"     )) ~> caracteristicasTable",
				"lugar sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          lugar_id as integer,",
				"          tipo_lugar as string,",
				"          lugar as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          lugar_id,",
				"          tipo_lugar,",
				"          lugar",
				"     )) ~> lugarTable",
				"fecha sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fecha_id as integer,",
				"          fecha_evento as date,",
				"          hora_evento as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          fecha_id,",
				"          fecha_evento,",
				"          hora_evento",
				"     )) ~> fechaTable",
				"setEdad sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          demografia_id as integer,",
				"          sexo as string,",
				"          genero as string,",
				"          edad as integer,",
				"          nacionalidad as string,",
				"          etnia as string,",
				"          estado_civil as string,",
				"          nivel_instruccion as string,",
				"          discapacidad as string,",
				"          profesion as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          demografia_id,",
				"          sexo,",
				"          genero,",
				"          edad,",
				"          nacionalidad,",
				"          etnia,",
				"          estado_civil,",
				"          nivel_instruccion,",
				"          discapacidad,",
				"          profesion",
				"     )) ~> demografiaTable",
				"motivacion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          motivacion_id as integer,",
				"          presunta_motivacion as string,",
				"          causa_motivada as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          motivacion_id,",
				"          presunta_motivacion,",
				"          causa_motivada",
				"     )) ~> motivacionTable"
			]
		}
	}
}